name: Build and Push Java GDAL Docker Images

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # 每周检查一次新版本 (每周日 UTC 2:00)
    - cron: '0 2 * * 0'
  workflow_dispatch:

jobs:
  get-gdal-versions:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.versions.outputs.versions }}
    steps:
      - name: Get GDAL versions
        id: versions
        run: |
          # 获取 GDAL 版本列表
          versions=$(curl -s "https://download.osgeo.org/gdal/" | \
          grep -oP '(?<=href=")[0-9]+\.[0-9]+\.[0-9]+(?=/)' | \
          sort -V | \
          awk -F. '($1 > 3) || ($1 == 3 && $2 > 8) || ($1 == 3 && $2 == 8 && $3 >= 5)' | \
          jq -R -s -c 'split("\n")[:-1]')
          
          echo "Found GDAL versions:"
          echo "$versions" | jq .
          echo "versions=$versions" >> $GITHUB_OUTPUT

  build:
    needs: get-gdal-versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        gdal_version: ${{ fromJson(needs.get-gdal-versions.outputs.versions) }}
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache GDAL source
        uses: actions/cache@v4
        with:
          path: /tmp/gdal-${{ matrix.gdal_version }}.tar.gz
          key: gdal-source-${{ matrix.gdal_version }}-${{ github.sha }}
          restore-keys: |
            gdal-source-${{ matrix.gdal_version }}-

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Check if image exists
        if: github.event_name != 'pull_request'
        id: check-image
        run: |
          # 检查镜像是否已存在
          if docker manifest inspect freelabspace/java-gdal-local:${{ matrix.gdal_version }} > /dev/null 2>&1; then
            echo "Image freelabspace/java-gdal-local:${{ matrix.gdal_version }} already exists"
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "Image freelabspace/java-gdal-local:${{ matrix.gdal_version }} does not exist, will build"
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and push image
        if: github.event_name == 'pull_request' || steps.check-image.outputs.skip == 'false'
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: freelabspace/java-gdal-local:${{ matrix.gdal_version }}
          build-args: |
            GDAL_VERSION=${{ matrix.gdal_version }}
          cache-from: type=gha,scope=gdal-${{ matrix.gdal_version }}
          cache-to: type=gha,mode=max,scope=gdal-${{ matrix.gdal_version }}